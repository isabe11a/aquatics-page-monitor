name: Aquatics Page Monitor
on:
  schedule:
    - cron: "*/5 * * * *"   # Every 5 minutes
  workflow_dispatch:
# Needed so the workflow can push baseline.json
permissions:
  contents: write
# Prevent overlapping runs from colliding
concurrency:
  group: aquatics-monitor
  cancel-in-progress: true
jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      # Sync before anything modifies baseline.json
      - name: Sync with remote
        run: |
          git fetch origin
          git checkout ${{ github.ref_name }}
          git pull --rebase origin ${{ github.ref_name }}
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install Playwright
        run: |
          python -m pip install -r requirements.txt
          python -m playwright install --with-deps chromium
      # Run the monitor; capture its output even if it exits 1 on change
      - name: Run monitor
        id: monitor
        continue-on-error: true
        run: |
          set -o pipefail
          python monitor.py | tee report.txt
      
      # Check if this is the 7am PT run (14:00 UTC, and within first 15 min window)
      - name: Check if daily report time
        id: check_time
        run: |
          current_hour=$(date -u +%H)
          current_min=$(date -u +%M)
          # Only send daily email during 14:00-14:14 UTC window (first run of the 7am hour)
          if [ "$current_hour" == "14" ] && [ "$current_min" -lt "15" ]; then
            echo "is_daily_time=true" >> $GITHUB_OUTPUT
          else
            echo "is_daily_time=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Commit updated baseline
        if: always()
        run: |
          git config user.name "${{ secrets.GIT_USER_NAME }}"
          git config user.email "${{ secrets.GIT_USER_EMAIL }}"
          git add baseline.json
          git commit -m "Update baseline [skip ci]" || echo "No changes"
          git push
      
      # Send email if: (1) changes detected OR (2) it's 7am daily report time
      - name: Send email alert
        if: always() && (steps.monitor.outcome == 'failure' || steps.check_time.outputs.is_daily_time == 'true')
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          to: ${{ secrets.MAIL_TO }}
          from: "Aquatics Bot <${{ secrets.MAIL_USERNAME }}>"
          subject: "${{ steps.monitor.outcome == 'failure' && 'üèä Aquatics monitor: CHANGE detected!' || 'Aquatics monitor: daily report' }}"
          body: |
            Outcome: ${{ steps.monitor.outcome == 'failure' && 'CHANGE detected' || 'No change' }}
            Repo:    ${{ github.repository }}
            Run:     ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            Report:
            (See attached report.txt or the 'Run monitor' step logs.)
          attachments: report.txt
      
      # Re-fail the job if a change was detected (keeps the red signal + native GitHub alert)
      - name: Mark job failed if change detected
        if: steps.monitor.outcome == 'failure'
        run: exit 1
        